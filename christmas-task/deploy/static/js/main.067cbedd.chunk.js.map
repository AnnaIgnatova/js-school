{"version":3,"sources":["components/Footer/index.tsx","data.js","StoreContext.jsx","components/Header/index.tsx","components/Toys/Cards/Card/index.tsx","components/Toys/Cards/index.tsx","components/Toys/Settings/components/Sorting/constants/sortingRules.ts","components/Toys/Settings/components/Sorting/constants/sortingId.ts","components/Toys/Settings/components/Sorting/functions/openSortingRules.tsx","components/Toys/Settings/components/Sorting/index.tsx","components/Toys/Settings/components/Sorting/functions/selectSortingRule.tsx","components/Toys/Settings/components/Forms/constants/forms.ts","components/Toys/Settings/components/Forms/index.tsx","components/Toys/Settings/components/Forms/functions/createForm.tsx","components/Toys/Settings/components/RangeSlider/index.tsx","components/Toys/Settings/components/ExampleCount/index.tsx","components/Toys/Settings/components/Years/index.tsx","components/Toys/Settings/components/Colors/constants/colors.ts","components/Toys/Settings/components/Colors/index.tsx","components/Toys/Settings/components/Colors/functions/selectColor.tsx","components/Toys/Settings/components/Size/constants/toySizes.ts","components/Toys/Settings/components/Size/index.tsx","components/Toys/Settings/components/Favorite/index.tsx","components/Toys/Settings/components/Categories/constants/categories.tsx","components/Toys/Settings/components/Categories/index.tsx","components/Toys/Settings/constants/settingsBlocks.tsx","components/Toys/Settings/functions/createSettingsBlock.tsx","components/Toys/Settings/index.tsx","components/Toys/index.tsx","components/Welcome/index.tsx","components/Modal/index.tsx","components/Tree/TreeSettings/Trees/index.tsx","components/Tree/TreeSettings/Backgrounds/index.tsx","components/Tree/TreeSettings/Garland/index.tsx","components/Tree/TreeSettings/index.tsx","components/Tree/TreeSettings/XmasTree/index.jsx","components/Tree/TreeToys/Toy.tsx","components/Tree/TreeToys/index.tsx","components/Tree/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Footer","className","href","data","num","name","count","year","shape","color","size","favorite","React","createContext","Provider","Consumer","defaultCount","map","toy","state","sortingRule","byNameAcs","byNameDesc","byYearAcs","byYearDesc","sizes","small","medium","big","colors","white","yellow","red","blue","green","forms","ball","bell","pine","snowflake","figure","savedToys","slotsModal","years","searchText","tree","bg","bgSizes","snowing","gareland","switchGareland","toysOnTree","toysCount","StoreContextProvider","changeRoute","setState","prevState","changeToysCount","id","onTree","addToyOnTree","chooseSnowing","chooseTree","treeClass","chooseGareland","garelandClass","setGareland","bool","chooseBG","bgClass","setBGsize","rigth","left","height","searchToy","value","resetFilters","Object","assign","key","getColors","chooseYear","min","max","chooseCount","toggleSlotsModal","toggleFavorite","chooseSortingRule","chooseSize","chooseColor","chooseForm","addToSaved","push","removeFromSaved","splice","indexOf","this","props","children","Component","startSnow","document","querySelector","snowfall","createElement","prepend","interval","setInterval","clearInterval","removeChild","getBoundingClientRect","right","snowFlake","classList","add","style","Math","random","animationDuration","opacity","width","appendChild","setTimeout","remove","createSnowFlake","Header","useState","setSnowing","play","setPlay","context","src","type","onClick","e","audio","currentTarget","toggle","pause","currentTime","route","placeholder","autoComplete","autoFocus","onChange","target","to","length","Card","info","backgroundImage","includes","contains","allSizes","allForms","allColors","createFilterArr","filterObj","constArr","arr","values","filter","val","forEach","index","renderCards","convertSortRule","sizesArr","formsArr","colorsArr","favoriteArr","rule","sortedArr","slice","sort","a","b","x","toLowerCase","y","sortingDataByRule","Number","Cards","cards","card","sortingRules","sortingIdArr","openSortingSelect","Sorting","chooseSort","textContent","selectSortingRule","Forms","selectForm","RangeSlider","handleChange","sliderValues","changeValues","ExampleCount","Years","Colors","backgroundColor","selectColor","toySizes","Size","checked","Favorite","categoriesBlocks","title","component","Categories","settingsBlocks","SettingsBlock","Settings","Toys","Welcome","Modal","show","Trees","console","log","dataset","Backgrounds","Garland","flash","TreeSettings","lightropes","lights","flashes","XmasTree","usemap","coords","lightrope","light","i","animationName","Toy","pos","position","setPos","setTarget","defaultPosition","onStart","preventDefault","onDrag","ui","deltaX","deltaY","onStop","elementFromPoint","clientX","clientY","draggable","TreeToys","Array","from","v","k","Tree","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.067cbedd.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <div className=\"container\">\r\n      <a href=\"https://rs.school/js/\" className=\"rs-icon\"></a>\r\n      <div className=\"author-info\">\r\n        App developer:\r\n        <a href=\"https://github.com/AnnaIgnatova\" className=\"author-name\">\r\n          {\" \"}\r\n          Anna Ignatova{\" \"}\r\n        </a>\r\n        <span className=\"dev-year\">2021</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nexport default Footer;\r\n","const data = [\r\n  {\r\n    num: \"1\",\r\n    name: \"big ball with a picture\",\r\n    count: \"2\",\r\n    year: \"1960\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"2\",\r\n    name: \"Green ball with flowers\",\r\n    count: \"5\",\r\n    year: \"2000\",\r\n    shape: \"ball\",\r\n    color: \"green\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"3\",\r\n    name: \"Red matte ball\",\r\n    count: \"3\",\r\n    year: \"1990\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"4\",\r\n    name: \"Red Icicle\",\r\n    count: \"2\",\r\n    year: \"1980\",\r\n    shape: \"figure\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"5\",\r\n    name: \"Red grapes\",\r\n    count: \"4\",\r\n    year: \"1980\",\r\n    shape: \"figure\",\r\n    color: \"red\",\r\n    size: \"medium\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"6\",\r\n    name: \"Red ball with a picture\",\r\n    count: \"6\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"7\",\r\n    name: \"Milky white ball\",\r\n    count: \"12\",\r\n    year: \"1960\",\r\n    shape: \"ball\",\r\n    color: \"white\",\r\n    size: \"medium\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"8\",\r\n    name: \"Red ball\",\r\n    count: \"10\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"9\",\r\n    name: \"Old bell\",\r\n    count: \"2\",\r\n    year: \"1950\",\r\n    shape: \"bell\",\r\n    color: \"white\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"10\",\r\n    name: \"White ball retro\",\r\n    count: \"7\",\r\n    year: \"1960\",\r\n    shape: \"ball\",\r\n    color: \"white\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"11\",\r\n    name: \"White spruce pine\",\r\n    count: \"11\",\r\n    year: \"1960\",\r\n    shape: \"pine\",\r\n    color: \"white\",\r\n    size: \"small\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"12\",\r\n    name: \"White ball with flowers\",\r\n    count: \"5\",\r\n    year: \"1980\",\r\n    shape: \"ball\",\r\n    color: \"white\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"13\",\r\n    name: \"Ball Painted River\",\r\n    count: \"3\",\r\n    year: \"1970\",\r\n    shape: \"ball\",\r\n    color: \"blue\",\r\n    size: \"big\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"14\",\r\n    name: \"Ball Painted Village\",\r\n    count: \"4\",\r\n    year: \"1970\",\r\n    shape: \"ball\",\r\n    color: \"blue\",\r\n    size: \"big\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"15\",\r\n    name: \"Painted bell\",\r\n    count: \"3\",\r\n    year: \"1970\",\r\n    shape: \"bell\",\r\n    color: \"blue\",\r\n    size: \"medium\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"16\",\r\n    name: \"Painted pine cone Landscape\",\r\n    count: \"3\",\r\n    year: \"1970\",\r\n    shape: \"pine\",\r\n    color: \"blue\",\r\n    size: \"medium\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"17\",\r\n    name: \"Painted pine cone\",\r\n    count: \"7\",\r\n    year: \"1970\",\r\n    shape: \"pine\",\r\n    color: \"red\",\r\n    size: \"medium\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"18\",\r\n    name: \"Yellow ball with a bow\",\r\n    count: \"2\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"19\",\r\n    name: \"Yellow ball with sequins\",\r\n    count: \"12\",\r\n    year: \"1980\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"20\",\r\n    name: \"Red ball with a bow\",\r\n    count: \"8\",\r\n    year: \"1950\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"medium\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"21\",\r\n    name: \"Red ball with stars\",\r\n    count: \"4\",\r\n    year: \"1970\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"22\",\r\n    name: \"Golden spruce pine\",\r\n    count: \"11\",\r\n    year: \"1990\",\r\n    shape: \"pine\",\r\n    color: \"yellow\",\r\n    size: \"small\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"23\",\r\n    name: \"Old bell\",\r\n    count: \"9\",\r\n    year: \"1950\",\r\n    shape: \"bell\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"24\",\r\n    name: \"Graceful snowflake\",\r\n    count: \"1\",\r\n    year: \"1940\",\r\n    shape: \"snowflake\",\r\n    color: \"white\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"25\",\r\n    name: \"Pink ball with sequins\",\r\n    count: \"12\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"26\",\r\n    name: \"Ruby-gold ball\",\r\n    count: \"8\",\r\n    year: \"1960\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"27\",\r\n    name: \"Red ball with pattern\",\r\n    count: \"4\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"28\",\r\n    name: \"Burgundy ball with a pattern\",\r\n    count: \"10\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"29\",\r\n    name: \"Old ball with flowers\",\r\n    count: \"5\",\r\n    year: \"1950\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"30\",\r\n    name: \"Antique ball with a pattern\",\r\n    count: \"8\",\r\n    year: \"1950\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"31\",\r\n    name: \"Red ball with sparkles\",\r\n    count: \"8\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"32\",\r\n    name: \"Blue Ball Universe\",\r\n    count: \"11\",\r\n    year: \"1970\",\r\n    shape: \"ball\",\r\n    color: \"blue\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"33\",\r\n    name: \"Blue ball with snowflake\",\r\n    count: \"6\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"blue\",\r\n    size: \"medium\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"34\",\r\n    name: \"Green ball with a pattern\",\r\n    count: \"8\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"green\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"35\",\r\n    name: \"Figurine of a Fox in a scarf\",\r\n    count: \"8\",\r\n    year: \"1950\",\r\n    shape: \"figure\",\r\n    color: \"yellow\",\r\n    size: \"medium\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"36\",\r\n    name: \"Lilac Ball Blizzard\",\r\n    count: \"1\",\r\n    year: \"2000\",\r\n    shape: \"ball\",\r\n    color: \"blue\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"37\",\r\n    name: \"Green Ball Blizzard\",\r\n    count: \"6\",\r\n    year: \"2000\",\r\n    shape: \"ball\",\r\n    color: \"green\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"38\",\r\n    name: \"Blue Ball Blizzard\",\r\n    count: \"6\",\r\n    year: \"2000\",\r\n    shape: \"ball\",\r\n    color: \"blue\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"39\",\r\n    name: \"Red Snowflake\",\r\n    count: \"6\",\r\n    year: \"1990\",\r\n    shape: \"snowflake\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"40\",\r\n    name: \"Golden snowflake\",\r\n    count: \"12\",\r\n    year: \"2020\",\r\n    shape: \"snowflake\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"41\",\r\n    name: \"Arctic Snowflake\",\r\n    count: \"11\",\r\n    year: \"2020\",\r\n    shape: \"snowflake\",\r\n    color: \"white\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"42\",\r\n    name: \"Green ball\",\r\n    count: \"10\",\r\n    year: \"1980\",\r\n    shape: \"ball\",\r\n    color: \"green\",\r\n    size: \"medium\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"43\",\r\n    name: \"Two-color snowflake\",\r\n    count: \"6\",\r\n    year: \"1960\",\r\n    shape: \"snowflake\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"44\",\r\n    name: \"Angel Figurine\",\r\n    count: \"11\",\r\n    year: \"1940\",\r\n    shape: \"figure\",\r\n    color: \"red\",\r\n    size: \"medium\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"45\",\r\n    name: `New Year\"s snowflake`,\r\n    count: \"1\",\r\n    year: \"1980\",\r\n    shape: \"snowflake\",\r\n    color: \"white\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"46\",\r\n    name: \"Amanita figurine\",\r\n    count: \"10\",\r\n    year: \"1950\",\r\n    shape: \"figure\",\r\n    color: \"red\",\r\n    size: \"small\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"47\",\r\n    name: \"Figurine Well\",\r\n    count: \"6\",\r\n    year: \"1950\",\r\n    shape: \"figure\",\r\n    color: \"red\",\r\n    size: \"small\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"48\",\r\n    name: \"Yellow ball with a bow\",\r\n    count: \"6\",\r\n    year: \"1960\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"49\",\r\n    name: \"Snowflake with turquoise\",\r\n    count: \"4\",\r\n    year: \"1980\",\r\n    shape: \"snowflake\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"50\",\r\n    name: \"Big bell\",\r\n    count: \"3\",\r\n    year: \"2020\",\r\n    shape: \"bell\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"51\",\r\n    name: \"Pine cone with frost\",\r\n    count: \"12\",\r\n    year: \"1970\",\r\n    shape: \"pine\",\r\n    color: \"red\",\r\n    size: \"small\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"52\",\r\n    name: \"Red ball with an inscription\",\r\n    count: \"12\",\r\n    year: \"1990\",\r\n    shape: \"ball\",\r\n    color: \"red\",\r\n    size: \"big\",\r\n    favorite: true,\r\n  },\r\n  {\r\n    num: \"53\",\r\n    name: \"Silver snowflake\",\r\n    count: \"6\",\r\n    year: \"2020\",\r\n    shape: \"snowflake\",\r\n    color: \"white\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"54\",\r\n    name: \"Green ball with a picture\",\r\n    count: \"6\",\r\n    year: \"2010\",\r\n    shape: \"ball\",\r\n    color: \"green\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"55\",\r\n    name: \"Gingerbread House\",\r\n    count: \"1\",\r\n    year: \"1940\",\r\n    shape: \"figure\",\r\n    color: \"yellow\",\r\n    size: \"big\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"56\",\r\n    name: \"Gingerbread House\",\r\n    count: \"1\",\r\n    year: \"1940\",\r\n    shape: \"figure\",\r\n    color: \"yellow\",\r\n    size: \"small\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"57\",\r\n    name: \"Gingerbread House\",\r\n    count: \"1\",\r\n    year: \"1940\",\r\n    shape: \"figure\",\r\n    color: \"yellow\",\r\n    size: \"medium\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"58\",\r\n    name: \"Polar bear figurine\",\r\n    count: \"2\",\r\n    year: \"1980\",\r\n    shape: \"figure\",\r\n    color: \"white\",\r\n    size: \"medium\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"59\",\r\n    name: \"Yellow ball with an inscription\",\r\n    count: \"10\",\r\n    year: \"1990\",\r\n    shape: \"ball\",\r\n    color: \"yellow\",\r\n    size: \"medium\",\r\n    favorite: false,\r\n  },\r\n  {\r\n    num: \"60\",\r\n    name: \"Figurine Dove\",\r\n    count: \"12\",\r\n    year: \"1940\",\r\n    shape: \"figure\",\r\n    color: \"white\",\r\n    size: \"medium\",\r\n    favorite: true,\r\n  },\r\n];\r\nexport default data;\r\n","import React, { Component } from \"react\";\r\nimport data from \"./data\";\r\nconst { Provider, Consumer } = React.createContext();\r\n\r\nconst defaultCount = data.map((toy) => +toy.count);\r\n\r\nlet state = {\r\n  sortingRule: {\r\n    byNameAcs: true,\r\n    byNameDesc: false,\r\n    byYearAcs: false,\r\n    byYearDesc: false,\r\n  },\r\n  favorite: false,\r\n  sizes: { small: false, medium: false, big: false },\r\n  colors: {\r\n    white: false,\r\n    yellow: false,\r\n    red: false,\r\n    blue: false,\r\n    green: false,\r\n  },\r\n  forms: {\r\n    ball: false,\r\n    bell: false,\r\n    pine: false,\r\n    snowflake: false,\r\n    figure: false,\r\n  },\r\n  savedToys: [],\r\n  slotsModal: false,\r\n  years: [1940, 2020],\r\n  count: [1, 12],\r\n  searchText: \"\",\r\n  tree: \"1\",\r\n  bg: \"bg-1\",\r\n  bgSizes: [0, 0, 0],\r\n  snowing: false,\r\n  gareland: \"\",\r\n  switchGareland: false,\r\n  toysOnTree: [],\r\n  toysCount: defaultCount,\r\n};\r\n\r\nclass StoreContextProvider extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = state;\r\n  }\r\n\r\n  changeRoute = () => {\r\n    this.setState((prevState) => {\r\n      let toysCount = [...prevState.toysCount];\r\n      toysCount = [...defaultCount];\r\n      return {\r\n        toysCount,\r\n      };\r\n    });\r\n  };\r\n\r\n  changeToysCount = (id, onTree = false) => {\r\n    this.setState((prevState) => {\r\n      let toysCount = [...prevState.toysCount];\r\n      if (!onTree && toysCount[id] < data[id].count) toysCount[id] += 1;\r\n      else if (onTree) {\r\n        toysCount[id] -= 1;\r\n      }\r\n      return {\r\n        toysCount,\r\n      };\r\n    });\r\n  };\r\n\r\n  addToyOnTree = (id) => {\r\n    this.setState((prevState) => {\r\n      let toysOnTree = [...prevState.toysOnTree];\r\n      toysOnTree = [...toysOnTree, id];\r\n      return {\r\n        toysOnTree,\r\n      };\r\n    });\r\n  };\r\n\r\n  chooseSnowing = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        snowing: !prevState.snowing,\r\n      };\r\n    });\r\n  };\r\n\r\n  chooseTree = (treeClass) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        tree: treeClass,\r\n      };\r\n    });\r\n  };\r\n\r\n  chooseGareland = (garelandClass) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        gareland: garelandClass,\r\n      };\r\n    });\r\n  };\r\n\r\n  setGareland = (bool) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        switchGareland: bool,\r\n      };\r\n    });\r\n  };\r\n\r\n  chooseBG = (bgClass) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        bg: bgClass,\r\n      };\r\n    });\r\n  };\r\n\r\n  setBGsize = (rigth, left, height) => {\r\n    this.setState((prevState) => {\r\n      let sizes = [...prevState.bgSizes];\r\n      sizes = [+rigth, +left, +height];\r\n      return {\r\n        sizes,\r\n      };\r\n    });\r\n  };\r\n\r\n  searchToy = (value) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        searchText: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  resetFilters = () => {\r\n    this.setState((prevState) => {\r\n      let years = [...prevState.years];\r\n      let count = [...prevState.count];\r\n      let sizes = Object.assign({}, prevState.sizes);\r\n      let colors = Object.assign({}, prevState.colors);\r\n      let forms = Object.assign({}, prevState.forms);\r\n      for (let key in sizes) {\r\n        sizes[key] = false;\r\n      }\r\n      for (let key in colors) {\r\n        colors[key] = false;\r\n      }\r\n      for (let key in forms) {\r\n        forms[key] = false;\r\n      }\r\n      count = [1, 12];\r\n      years[0] = 1940;\r\n      years[1] = 2020;\r\n      return {\r\n        years,\r\n        count,\r\n        favorite: false,\r\n        sizes,\r\n        colors,\r\n        forms,\r\n      };\r\n    });\r\n  };\r\n\r\n  getColors = () => {\r\n    return this.state.colors;\r\n  };\r\n\r\n  chooseYear = (min, max) => {\r\n    this.setState((prevState) => {\r\n      let years = [...prevState.years];\r\n      years[0] = min;\r\n      years[1] = max;\r\n      return { years };\r\n    });\r\n  };\r\n\r\n  chooseCount = (min, max) => {\r\n    this.setState((prevState) => {\r\n      let count = [...prevState.count];\r\n      count[0] = min;\r\n      count[1] = max;\r\n      return { count };\r\n    });\r\n  };\r\n\r\n  toggleSlotsModal = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        slotsModal: !prevState.slotsModal,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleFavorite = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        favorite: !prevState.favorite,\r\n      };\r\n    });\r\n  };\r\n\r\n  chooseSortingRule = (value) => {\r\n    this.setState((prevState) => {\r\n      let sortingRule = Object.assign({}, prevState.sortingRule);\r\n      for (let key in sortingRule) {\r\n        sortingRule[key] = false;\r\n      }\r\n      sortingRule[value] = true;\r\n      return { sortingRule };\r\n    });\r\n  };\r\n\r\n  chooseSize = (value) => {\r\n    this.setState((prevState) => {\r\n      let sizes = Object.assign({}, prevState.sizes);\r\n      sizes[value] = !sizes[value];\r\n      return { sizes };\r\n    });\r\n  };\r\n\r\n  chooseColor = (value) => {\r\n    this.setState((prevState) => {\r\n      let colors = Object.assign({}, prevState.colors);\r\n      colors[value] = !colors[value];\r\n      return { colors };\r\n    });\r\n    return this.state.colors;\r\n  };\r\n\r\n  chooseForm = (value) => {\r\n    this.setState((prevState) => {\r\n      let forms = Object.assign({}, prevState.forms);\r\n      forms[value] = !forms[value];\r\n      return { forms };\r\n    });\r\n  };\r\n\r\n  addToSaved = (id) => {\r\n    this.setState((prevState) => {\r\n      let savedToys = [...prevState.savedToys];\r\n      savedToys.push(id);\r\n      return { savedToys };\r\n    });\r\n  };\r\n\r\n  removeFromSaved = (id) => {\r\n    this.setState((prevState) => {\r\n      let savedToys = [...prevState.savedToys];\r\n      savedToys.splice(savedToys.indexOf(id), 1);\r\n      return { savedToys };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider\r\n        value={{\r\n          sizes: this.state.sizes,\r\n          colors: this.state.colors,\r\n          forms: this.state.forms,\r\n          sortingRule: this.state.sortingRule,\r\n          savedToys: this.state.savedToys,\r\n          slotsModal: this.state.slotsModal,\r\n          favorite: this.state.favorite,\r\n          years: this.state.years,\r\n          count: this.state.count,\r\n          searchText: this.state.searchText,\r\n          tree: this.state.tree,\r\n          bg: this.state.bg,\r\n          bgSizes: this.state.bgSizes,\r\n          snowing: this.state.snowing,\r\n          gareland: this.state.gareland,\r\n          switchGareland: this.state.switchGareland,\r\n          toysOnTree: this.state.toysOnTree,\r\n          toysCount: this.state.toysCount,\r\n          chooseSize: this.chooseSize,\r\n          chooseColor: this.chooseColor,\r\n          chooseForm: this.chooseForm,\r\n          chooseSortingRule: this.chooseSortingRule,\r\n          addToSaved: this.addToSaved,\r\n          removeFromSaved: this.removeFromSaved,\r\n          toggleSlotsModal: this.toggleSlotsModal,\r\n          toggleFavorite: this.toggleFavorite,\r\n          getColors: this.getColors,\r\n          chooseYear: this.chooseYear,\r\n          chooseCount: this.chooseCount,\r\n          resetFilters: this.resetFilters,\r\n          searchToy: this.searchToy,\r\n          chooseTree: this.chooseTree,\r\n          chooseBG: this.chooseBG,\r\n          setBGsize: this.setBGsize,\r\n          chooseSnowing: this.chooseSnowing,\r\n          chooseGareland: this.chooseGareland,\r\n          setGareland: this.setGareland,\r\n          addToyOnTree: this.addToyOnTree,\r\n          changeToysCount: this.changeToysCount,\r\n          changeRoute: this.changeRoute,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { StoreContextProvider, Consumer as StoreContextConsumer };\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StoreContextConsumer } from \"../../StoreContext\";\r\nimport \"./style.css\";\r\n\r\ninterface IHeder {\r\n  route: string;\r\n}\r\n\r\nfunction createSnowFlake() {\r\n  const bg = (document.querySelector(\".snowfall\") as HTMLElement) || \"\";\r\n  if (bg) {\r\n    const rigth = bg.getBoundingClientRect().right - 20;\r\n    const left = bg.getBoundingClientRect().left;\r\n\r\n    const snowFlake = document.createElement(\"div\");\r\n    snowFlake.classList.add(\"snowflake\");\r\n    snowFlake.style.left = Math.random() * (rigth - left) + \"px\";\r\n    snowFlake.style.animationDuration = Math.random() * 3 + 2 + \"s\"; // between 2 - 5 seconds\r\n    snowFlake.style.opacity = `${Math.random()}`;\r\n    const size = Math.random() * (30 - 10) + 10;\r\n    snowFlake.style.width = `${size}px`;\r\n    snowFlake.style.height = `${size}px`;\r\n\r\n    bg.appendChild(snowFlake);\r\n\r\n    setTimeout(() => {\r\n      snowFlake.remove();\r\n    }, 3000);\r\n  }\r\n}\r\n\r\nfunction startSnow(state: boolean) {\r\n  const bg = document.querySelector(\".tree-bg\") as HTMLElement;\r\n\r\n  if (!state) {\r\n    const snowfall = document.createElement(\"div\");\r\n    snowfall.className = \"snowfall\";\r\n    bg.prepend(snowfall);\r\n  }\r\n\r\n  const interval = setInterval(() => {\r\n    if (!state) {\r\n      createSnowFlake();\r\n    } else {\r\n      clearInterval(interval);\r\n      bg?.removeChild(bg.children[0]);\r\n    }\r\n  }, 50);\r\n}\r\n\r\nconst Header = (props: IHeder) => {\r\n  const [snowing, setSnowing] = useState(false);\r\n  const [play, setPlay] = useState(false);\r\n  return (\r\n    <StoreContextConsumer>\r\n      {(context) => (\r\n        <div className=\"header\">\r\n          <div className=\"container\">\r\n            <audio className=\"audio\">\r\n              <source src=\"./audio/audio.mp3\" type=\"audio/mpeg\" />\r\n            </audio>\r\n            <div\r\n              className=\"header-icon sound-icon\"\r\n              onClick={(e) => {\r\n                const audio = document.querySelector(\r\n                  \".audio\"\r\n                ) as HTMLAudioElement;\r\n                e.currentTarget.classList.toggle(\"select-icon\");\r\n                if (!play) {\r\n                  audio.play();\r\n                  setPlay(true);\r\n                } else {\r\n                  audio.pause();\r\n                  audio.currentTime = 0;\r\n                  setPlay(false);\r\n                }\r\n              }}\r\n            ></div>\r\n            <div\r\n              className=\"header-icon snow-icon\"\r\n              onClick={(e) => {\r\n                e.currentTarget.classList.toggle(\"select-icon\");\r\n                startSnow(snowing);\r\n\r\n                if (!snowing) {\r\n                  setSnowing(true);\r\n                } else {\r\n                  setSnowing(false);\r\n                }\r\n              }}\r\n            ></div>\r\n            {props.route === \"toys\" ? (\r\n              <input\r\n                type=\"search\"\r\n                className=\"header-search\"\r\n                placeholder=\"Search\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                onChange={(e) => {\r\n                  context.searchToy(e.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"header-nav\">\r\n              <ul>\r\n                <li>\r\n                  <Link\r\n                    to=\"/\"\r\n                    className=\"nav-link\"\r\n                    onClick={context.changeRoute}\r\n                  >\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/toys\"\r\n                    className=\"nav-link\"\r\n                    onClick={context.changeRoute}\r\n                  >\r\n                    Toys\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/tree\"\r\n                    className=\"nav-link\"\r\n                    onClick={context.changeRoute}\r\n                  >\r\n                    X-mas Tree\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {props.route === \"toys\" ? (\r\n              <div className=\"favorite-count\">{context.savedToys.length}</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </StoreContextConsumer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { StoreContextConsumer } from \"../../../../StoreContext\";\r\nimport \"./style.css\";\r\n\r\ninterface CardInfo {\r\n  info: {\r\n    num: string;\r\n    name: string;\r\n    count: string;\r\n    year: string;\r\n    shape: string;\r\n    color: string;\r\n    size: string;\r\n    favorite: boolean;\r\n  };\r\n}\r\n\r\nconst Card = (props: CardInfo) => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"card\">\r\n        <div className=\"card-title\">{props.info.name}</div>\r\n        <div\r\n          className=\"card-img\"\r\n          style={{\r\n            backgroundImage: `url(/toys/${props.info.num}.png)`,\r\n          }}\r\n        ></div>\r\n        <div className=\"card-info\">\r\n          <div>\r\n            <b>Count:</b> {props.info.count}\r\n          </div>\r\n          <div>\r\n            <b>Year of purchase:</b> {props.info.year}\r\n          </div>\r\n          <div>\r\n            <b>Shape:</b> {props.info.shape}\r\n          </div>\r\n          <div>\r\n            <b>Color:</b> {props.info.color}\r\n          </div>\r\n          <div>\r\n            <b>Size:</b> {props.info.size}\r\n          </div>\r\n          <div>\r\n            <b>Favorite:</b> {props.info.favorite ? \"yes\" : \"no\"}\r\n          </div>\r\n        </div>\r\n        <div\r\n          id={props.info.num}\r\n          className={`favorite-toy ${\r\n            context.savedToys.includes(props.info.num) ? \"\" : \"not-favorite-toy\"\r\n          }`}\r\n          onClick={(e) => {\r\n            if (\r\n              !(e.target as HTMLElement).classList.contains(\"not-favorite-toy\")\r\n            ) {\r\n              context.removeFromSaved((e.target as HTMLElement)?.id);\r\n            } else {\r\n              if (context.savedToys.length + 1 > 20) {\r\n                context.toggleSlotsModal();\r\n              } else context.addToSaved((e.target as HTMLElement)?.id);\r\n            }\r\n          }}\r\n        ></div>\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Card;\r\n","import Card from \"./Card/index\";\r\nimport \"./style.css\";\r\nimport data from \"../../../data\";\r\nimport { StoreContextConsumer } from \"../../../StoreContext\";\r\n\r\ninterface Sizes {\r\n  small: boolean;\r\n  medium: boolean;\r\n  big: boolean;\r\n}\r\n\r\ninterface Colors {\r\n  white: boolean;\r\n  yellow: boolean;\r\n  red: boolean;\r\n  blue: boolean;\r\n  green: boolean;\r\n}\r\n\r\ninterface Forms {\r\n  ball: false;\r\n  bell: false;\r\n  pine: false;\r\n  snowflake: false;\r\n  figure: false;\r\n}\r\n\r\ninterface SortingRule {\r\n  byNameAcs: true;\r\n  byNameDesc: false;\r\n  byYearAcs: false;\r\n  byYearDesc: false;\r\n}\r\n\r\nconst sortingDataByRule = (rule: string) => {\r\n  const sortedArr = data.slice(0);\r\n  switch (rule) {\r\n    case \"byNameAcs\": {\r\n      return sortedArr.sort((a, b) => {\r\n        const x = a.name.toLowerCase();\r\n        const y = b.name.toLowerCase();\r\n        return x < y ? -1 : x > y ? 1 : 0;\r\n      });\r\n    }\r\n    case \"byNameDesc\": {\r\n      return sortedArr.sort((a, b) => {\r\n        const x = a.name.toLowerCase();\r\n        const y = b.name.toLowerCase();\r\n        return x > y ? -1 : x < y ? 1 : 0;\r\n      });\r\n    }\r\n    case \"byYearAcs\": {\r\n      return sortedArr.sort(function (a, b) {\r\n        return +a.year - +b.year;\r\n      });\r\n    }\r\n    case \"byYearDesc\": {\r\n      return sortedArr.sort(function (a, b) {\r\n        return +b.year - +a.year;\r\n      });\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nconst allSizes = [\"small\", \"medium\", \"big\"];\r\nconst allForms = [\"ball\", \"bell\", \"pine\", \"snowflake\", \"figure\"];\r\nconst allColors = [\"white\", \"yellow\", \"red\", \"blue\", \"green\"];\r\n\r\nfunction createFilterArr(\r\n  filterObj: Sizes | Forms | Colors,\r\n  constArr: string[]\r\n) {\r\n  let arr: string[] = [];\r\n  if (!Object.values(filterObj).filter((val) => val).length) arr = constArr;\r\n  else\r\n    Object.values(filterObj).forEach((value, index) => {\r\n      if (value) arr.push(constArr[index]);\r\n    });\r\n  return arr;\r\n}\r\n\r\nconst renderCards = (\r\n  sizes: Sizes,\r\n  colors: Colors,\r\n  forms: Forms,\r\n  sortingRule: SortingRule,\r\n  favorite: boolean,\r\n  years: number[],\r\n  count: number[],\r\n  searchText: string\r\n) => {\r\n  const convertSortRule = sortingRule.byYearAcs\r\n    ? \"byYearAcs\"\r\n    : sortingRule.byYearDesc\r\n    ? \"byYearDesc\"\r\n    : sortingRule.byNameAcs\r\n    ? \"byNameAcs\"\r\n    : sortingRule.byNameDesc\r\n    ? \"byNameDesc\"\r\n    : \"\";\r\n\r\n  const sizesArr = createFilterArr(sizes, allSizes);\r\n  const formsArr = createFilterArr(forms, allForms);\r\n  const colorsArr = createFilterArr(colors, allColors);\r\n\r\n  const favoriteArr = favorite ? [true] : [true, false];\r\n\r\n  return sortingDataByRule(convertSortRule)?.map((info) => {\r\n    if (\r\n      sizesArr.includes(info.size) &&\r\n      formsArr.includes(info.shape) &&\r\n      colorsArr.includes(info.color) &&\r\n      favoriteArr.includes(info.favorite) &&\r\n      Number(info.year) >= years[0] &&\r\n      Number(info.year) <= years[1] &&\r\n      Number(info.count) >= count[0] &&\r\n      Number(info.count) <= count[1] &&\r\n      info.name.toLowerCase().includes(searchText.toLowerCase())\r\n    )\r\n      return <Card info={info} />;\r\n  });\r\n};\r\n\r\nconst noToyModal = () => <div className=\"no-toy\">no one toy &#129402;</div>;\r\n\r\nconst Cards = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => {\r\n      const cards = renderCards(\r\n        context.sizes,\r\n        context.colors,\r\n        context.forms,\r\n        context.sortingRule,\r\n        context.favorite,\r\n        context.years,\r\n        context.count,\r\n        context.searchText\r\n      );\r\n      return (\r\n        <div className=\"cards\">\r\n          {cards?.filter((card) => card).length === 0 ? noToyModal() : cards}\r\n        </div>\r\n      );\r\n    }}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Cards;\r\n","export const sortingRules = [\r\n  `By name from \"A\" to \"Z\"`,\r\n  `By name from \"Z\" to \"A\"`,\r\n  `By year ascending`,\r\n  `By year descending`,\r\n];\r\n","export const sortingIdArr = [\r\n  \"byNameAcs\",\r\n  \"byNameDesc\",\r\n  \"byYearAcs\",\r\n  \"byYearDesc\",\r\n];\r\n","export const openSortingSelect = () => {\r\n  document.querySelector(\".select-choose\")?.classList.toggle(\"hidden\");\r\n};\r\n","import \"./style.css\";\r\nimport { sortingRules } from \"./constants/sortingRules\";\r\nimport { StoreContextConsumer } from \"../../../../../StoreContext\";\r\nimport { sortingIdArr } from \"./constants/sortingId\";\r\nimport { selectSortingRule } from \"./functions/selectSortingRule\";\r\nimport { openSortingSelect } from \"./functions/openSortingRules\";\r\n\r\nconst Sorting = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div>\r\n        <div className=\"sorting-select-default\" onClick={openSortingSelect}>\r\n          <span className=\"default-text\"> {sortingRules[0]}</span>\r\n          <div className=\"arrow-select\"></div>\r\n        </div>\r\n        <div className=\"select-choose hidden\">\r\n          {sortingRules.map((rule, index) => (\r\n            <div\r\n              className=\"select-item\"\r\n              id={sortingIdArr[index]}\r\n              onClick={(e) =>\r\n                selectSortingRule(e, context.chooseSortingRule, index)\r\n              }\r\n            >\r\n              {rule}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Sorting;\r\n","import { sortingRules } from \"../constants/sortingRules\";\r\n\r\nexport const selectSortingRule = (\r\n  e: React.MouseEvent<Element, MouseEvent>,\r\n  chooseSort: (id: string) => void,\r\n  index: number\r\n) => {\r\n  const { target } = e;\r\n  chooseSort((target as HTMLElement).id);\r\n  document.querySelector(\".default-text\")!.textContent = sortingRules[index];\r\n  document.querySelector(\".select-choose\")?.classList.add(\"hidden\");\r\n};\r\n","export const forms = [\"ball\", \"bell\", \"pine\", \"snowflake\", \"figure\"];\r\n","import \"./style.css\";\r\nimport { forms } from \"./constants/forms\";\r\nimport { StoreContextConsumer } from \"../../../../../StoreContext\";\r\nimport { selectForm } from \"./functions/createForm\";\r\n\r\nconst Forms = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"all-forms\">\r\n        {forms.map((name) => (\r\n          <div\r\n            className=\"form-wrapper\"\r\n            id={name}\r\n            onClick={(e) => {\r\n              selectForm(e, context.chooseForm);\r\n            }}\r\n          >\r\n            <div\r\n              className={`form-img form-img-${name} ${\r\n                context.forms[name] ? \"select-form\" : \"\"\r\n              }`}\r\n            ></div>\r\n            <div className=\"form-title\">{name}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Forms;\r\n","export const selectForm = (\r\n  e: React.MouseEvent<Element, MouseEvent>,\r\n  chooseForm: (id: string) => void\r\n) => {\r\n  const target = e.currentTarget;\r\n  chooseForm(target.id);\r\n  target.querySelector(\".form-img\")?.classList.toggle(\"select-form\");\r\n};\r\n","import React from \"react\";\r\nimport IValues from \"./interfaces/IValues\";\r\nimport { Range } from \"rc-slider\";\r\nimport \"./style.css\";\r\n\r\nclass RangeSlider extends React.Component<IValues> {\r\n  handleChange = (sliderValues: number[]) => {\r\n    this.props.changeValues(sliderValues[0], sliderValues[1]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Range\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          onChange={this.handleChange}\r\n          value={[this.props.values[0], this.props.values[1]]}\r\n        />\r\n        <div className=\"count-ranges\">\r\n          <div>{this.props.values[0]}</div>\r\n          <div>{this.props.values[1]} </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RangeSlider;\r\n","import \"./style.css\";\r\nimport { StoreContextConsumer } from \"../../../../../StoreContext\";\r\nimport RangeSlider from \"../RangeSlider\";\r\n\r\nconst ExampleCount = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <>\r\n        <RangeSlider\r\n          min={1}\r\n          max={12}\r\n          changeValues={context.chooseCount}\r\n          values={context.count}\r\n        />\r\n      </>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default ExampleCount;\r\n","import { StoreContextConsumer } from \"../../../../../StoreContext\";\r\nimport RangeSlider from \"../RangeSlider\";\r\n\r\nconst Years = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <>\r\n        <RangeSlider\r\n          min={1940}\r\n          max={2020}\r\n          changeValues={context.chooseYear}\r\n          values={context.years}\r\n        />\r\n      </>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Years;\r\n","export const colors = [\"white\", \"yellow\", \"red\", \"blue\", \"green\"];\r\n","import { StoreContextConsumer } from \"../../../../../StoreContext\";\r\nimport \"./style.css\";\r\nimport { colors } from \"./constants/colors\";\r\nimport { selectColor } from \"./functions/selectColor\";\r\n\r\nconst Colors = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"all-forms\">\r\n        {colors.map((color) => (\r\n          <div\r\n            className=\"color\"\r\n            id={color}\r\n            style={{ backgroundColor: color }}\r\n            onClick={(e) => {\r\n              selectColor(e, context.chooseColor);\r\n            }}\r\n          >\r\n            <div\r\n              className={`line ${context.colors[color] ? \"\" : \"hidden\"}`}\r\n            ></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Colors;\r\n","export const selectColor = (\r\n  e: React.MouseEvent<Element, MouseEvent>,\r\n  chooseColor: (id: string) => void\r\n): void => {\r\n  const target = e.currentTarget as HTMLElement;\r\n  target?.querySelector(\".line\")?.classList.toggle(\"hidden\");\r\n  chooseColor(target.id);\r\n};\r\n","export const toySizes = [\"small\", \"medium\", \"big\"];\r\n","import \"./style.css\";\r\nimport { toySizes } from \"./constants/toySizes\";\r\nimport { StoreContextConsumer } from \"../../../../../StoreContext\";\r\n\r\nconst Size = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"sizes-block\">\r\n        {toySizes.map((size) => (\r\n          <label className=\"size-item\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name={`${size}`}\r\n              className=\"size-checkbox\"\r\n              onChange={(e) => {\r\n                context.chooseSize(e.target.name);\r\n              }}\r\n              checked={context.sizes[size]}\r\n            />\r\n            {size}\r\n          </label>\r\n        ))}\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Size;\r\n","import { StoreContextConsumer } from \"../../../../../StoreContext\";\r\nimport \"./style.css\";\r\n\r\nconst Favorite = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <label className=\"favorite\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"favorite-checkbox\"\r\n          onChange={context.toggleFavorite}\r\n          checked={context.favorite}\r\n        />\r\n        Only favorite\r\n      </label>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Favorite;\r\n","import Forms from \"../../Forms\";\r\nimport ExampleCount from \"../../ExampleCount/index\";\r\nimport Years from \"../../Years/index\";\r\nimport Colors from \"../../Colors/index\";\r\nimport Size from \"../../Size/index\";\r\nimport Favorite from \"../../Favorite/index\";\r\n\r\nexport const categoriesBlocks = [\r\n  { title: \"Forms\", component: <Forms /> },\r\n  { title: \"Number of examples\", component: <ExampleCount /> },\r\n  { title: \"Year of purchase\", component: <Years /> },\r\n  { title: \"Color\", component: <Colors /> },\r\n  { title: \"Size\", component: <Size /> },\r\n  { title: \"\", component: <Favorite /> },\r\n];\r\n","import \"./style.css\";\r\nimport { categoriesBlocks } from \"./constants/categories\";\r\n\r\nconst Categories = () => (\r\n  <>\r\n    {categoriesBlocks.map(({ title, component }) => (\r\n      <div className=\"categories-block\">\r\n        <span className=\"categories-title\">{title}</span>\r\n        {component}\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default Categories;\r\n","import Sorting from \"../components/Sorting\";\r\nimport Categories from \"../components/Categories\";\r\n\r\nexport const settingsBlocks = [\r\n  { name: \"sorting\", component: <Sorting /> },\r\n  { name: \"categories\", component: <Categories /> },\r\n];\r\n","export const SettingsBlock = (props: {\r\n  name: string;\r\n  component: JSX.Element;\r\n}) => (\r\n  <div className={`settings-block ${props.name}`}>\r\n    <span className=\"settings-block-title\">{props.name}</span>\r\n    {props.component}\r\n  </div>\r\n);\r\n","import \"./style.css\";\r\nimport { StoreContextConsumer } from \"../../../StoreContext\";\r\nimport { settingsBlocks } from \"./constants/settingsBlocks\";\r\nimport { SettingsBlock } from \"./functions/createSettingsBlock\";\r\n\r\nconst Settings = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"settings-block\">\r\n        <div className=\"settings-content\">\r\n          {settingsBlocks.map(({ name, component }) => (\r\n            <SettingsBlock name={name} component={component} />\r\n          ))}\r\n\r\n          <div className=\"settings-btns\">\r\n            <button>Save</button>\r\n            <button onClick={context.resetFilters}>Reset</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Settings;\r\n","import Footer from \"../Footer\";\r\nimport Header from \"../Header/index\";\r\nimport Cards from \"./Cards/index\";\r\nimport Settings from \"./Settings/index\";\r\nimport \"./style.css\";\r\n\r\nconst Toys = () => {\r\n  return (\r\n    <>\r\n      <Header route={\"toys\"} />\r\n      <div className=\"container\">\r\n        <div className=\"toys\">\r\n          <Settings />\r\n          <Cards />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Toys;\r\n","import { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport \"./style.css\";\r\n\r\nconst Welcome = () => (\r\n  <>\r\n    <div className=\"welcome\">\r\n      <div className=\"ball\"></div>\r\n      <div className=\"ball-small\"></div>\r\n      <div className=\"welcome-text\">\r\n        help grandma decorate the x&nbsp;-&nbsp;mas tree\r\n      </div>\r\n      <Link to=\"/toys\" className=\"welcome-btn\">\r\n        Start\r\n      </Link>\r\n    </div>\r\n    <Footer />\r\n  </>\r\n);\r\n\r\nexport default Welcome;\r\n","import { StoreContextConsumer } from \"../../StoreContext\";\r\nimport ModalInfo from \"./interfaces/IModal\";\r\n\r\nconst Modal = (props: ModalInfo) => (\r\n  <StoreContextConsumer>\r\n    {(context) => {\r\n      return (\r\n        <div className={`modal-wrapper ${props.show ? \"\" : \"hidden\"}`}>\r\n          <div className=\"modal\">\r\n            No more free slots &#129402;\r\n            <div className=\"ok-btn\" onClick={context.toggleSlotsModal}>\r\n              OK\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Modal;\r\n","import { StoreContextConsumer } from \"../../../../StoreContext\";\r\nimport \"./style.css\";\r\n\r\nconst Trees = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"trees-container\">\r\n        {[\"1\", \"2\", \"3\", \"4\"].map((tree) => (\r\n          <div\r\n            className=\"tree-item-container\"\r\n            data-tree={tree}\r\n            onClick={(e) => {\r\n              const target = e.currentTarget as HTMLElement;\r\n              console.log(target.dataset.tree);\r\n              context.chooseTree(target.dataset.tree);\r\n            }}\r\n          >\r\n            <div className={`tree-item tree-${tree}`}></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Trees;\r\n","import { StoreContextConsumer } from \"../../../../StoreContext\";\r\nimport \"./style.css\";\r\n\r\nconst Backgrounds = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"bgs-container\">\r\n        {[\"bg-1\", \"bg-2\", \"bg-3\", \"bg-4\", \"bg-5\", \"bg-6\", \"bg-7\", \"bg-8\"].map(\r\n          (bg) => (\r\n            <div\r\n              className={`bg-item ${bg}`}\r\n              id={bg}\r\n              onClick={(e) => {\r\n                const target = e.currentTarget as HTMLElement;\r\n                context.chooseBG(target.id);\r\n              }}\r\n            ></div>\r\n          )\r\n        )}\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Backgrounds;\r\n","import { StoreContextConsumer } from \"../../../../StoreContext\";\r\nimport \"./style.css\";\r\n\r\nconst Garland = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"garland-container\">\r\n        {[\"rainbow\", \"flash-1\", \"flash-2\", \"flash-3\", \"flash-4\", \"none\"].map(\r\n          (flash, index) => (\r\n            <div\r\n              className={`garland garland-${index + 1}`}\r\n              id={flash}\r\n              onClick={(e) => {\r\n                if ((e.currentTarget as HTMLElement).id === \"none\")\r\n                  context.setGareland(false);\r\n                if (\r\n                  (e.currentTarget as HTMLElement).id !== \"none\" &&\r\n                  !context.switchGareland\r\n                )\r\n                  context.setGareland(true);\r\n                context.chooseGareland(e.currentTarget.id);\r\n              }}\r\n            >\r\n              <div className=\"active-gareland hidden\"></div>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default Garland;\r\n","import \"./style.css\";\r\nimport Trees from \"./Trees\";\r\nimport Backgrounds from \"./Backgrounds\";\r\nimport Garland from \"./Garland\";\r\n\r\nconst settingsBlocks = [\r\n  { title: \"choose tree\", component: <Trees /> },\r\n  { title: \"choose background\", component: <Backgrounds /> },\r\n  { title: \"choose garland\", component: <Garland /> },\r\n];\r\n\r\nconst TreeSettings = () => (\r\n  <div className=\"tree-settings\">\r\n    {settingsBlocks.map(({ title, component }) => (\r\n      <>\r\n        <div className=\"tree-settings-title\">{title}</div>\r\n        <div className=\"tree-settings-block\">{component}</div>\r\n      </>\r\n    ))}\r\n    <div className=\"trees-btns\">\r\n      <button>Share</button>\r\n      <button>Save</button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TreeSettings;\r\n","import { StoreContextConsumer } from \"../../../../StoreContext\";\r\nimport \"./style.css\";\r\nimport \"./gareland.css\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { useState } from \"react\";\r\nimport data from \"../../../../data\";\r\n// import Toy from \"../../TreeToys/Toy\";\r\n\r\nconst lightropes = [\r\n  \"lightrope-1\",\r\n  \"lightrope-2\",\r\n  \"lightrope-3\",\r\n  \"lightrope-4\",\r\n  \"lightrope-5\",\r\n  \"lightrope-6\",\r\n  \"lightrope-7\",\r\n  \"lightrope-8\",\r\n  \"lightrope-9\",\r\n  \"lightrope-10\",\r\n  \"lightrope-11\",\r\n];\r\n\r\nconst lights = [\r\n  [\"odd-light\", \"even-light\"],\r\n  [\"odd-light\", \"even-light\", \"\"],\r\n  [\"odd-light\", \"even-light\", \"\", \"odd-light\"],\r\n  [\"odd-light\", \"even-light\", \"\", \"odd-light\", \"even-light\"],\r\n  [\"odd-light\", \"even-light\", \"\", \"odd-light\", \"even-light\"],\r\n  [\"odd-light\", \"even-light\", \"\", \"odd-light\", \"even-light\", \"\"],\r\n  [\"odd-light\", \"even-light\", \"\", \"odd-light\", \"even-light\", \"\", \"odd-light\"],\r\n  [\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n  ],\r\n  [\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n  ],\r\n  [\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n  ],\r\n  [\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n    \"odd-light\",\r\n    \"even-light\",\r\n    \"\",\r\n  ],\r\n];\r\n\r\nconst flashes = [\r\n  \"flash-1\",\r\n  \"flash-2\",\r\n  \"flash-3\",\r\n  \"flash-1\",\r\n  \"flash-2\",\r\n  \"flash-3\",\r\n  \"flash-1\",\r\n  \"flash-2\",\r\n  \"flash-3\",\r\n];\r\nconst XmasTree = () => {\r\n  // const [toys, setToys] = useState([]);\r\n  // const [toyItem, setToy] = useState(\"\");\r\n  // const [coo, setCoord] = useState([]);\r\n  // const [y, setY] = useState(0);\r\n  // const [x, setX] = useState(0);\r\n\r\n  // const addToyToTree = (id) => {\r\n  //   const toysList = data.filter((toy) => toy.num === id);\r\n  //   setToys((toy) => [...toy, toysList[0]]);\r\n  // };\r\n  // let xy = [];\r\n  // const [{ isOver, coord }, drop] = useDrop(() => ({\r\n  //   accept: \"img\",\r\n  //   drop: (toy) => {\r\n  //     if (!toyItem) setToy(toy.id);\r\n  //     addToyToTree(toy.id);\r\n  //   },\r\n  //   collect: (monitor) => {\r\n  //     if (monitor.getSourceClientOffset()) {\r\n  //       xy = Object.values(monitor.getSourceClientOffset());\r\n  //     }\r\n  //     return {\r\n  //       isOver: !!monitor.isOver(),\r\n  //       coord: {\r\n  //         [toyItem]: xy,\r\n  //       },\r\n  //     };\r\n  //   },\r\n  // }));\r\n  // console.log(\"norm\", coord);\r\n  return (\r\n    <StoreContextConsumer>\r\n      {(context) => {\r\n        return (\r\n          <div className={`tree-bg ${context.bg}`}>\r\n            <img src={`../tree/${context.tree}.png`} usemap=\"#image-map\" />\r\n            <map\r\n              name=\"image-map\"\r\n              // onClick={(e) => {\r\n              //   e.preventDefault();\r\n              // }}\r\n            >\r\n              <area\r\n                // ref={drop}\r\n                className=\"tree-area\"\r\n                coords=\"421,446,456,663,34,640,90,346,177,155,250,8,328,139,368,238,395,316,406,386\"\r\n                shape=\"poly\"\r\n              />\r\n              {/* {toys.map((toy) => (\r\n                <Toy toy={toy} />\r\n              ))} */}\r\n              <div\r\n                className={`tree-gareland ${\r\n                  context.switchGareland ? \"\" : \"hidden\"\r\n                }`}\r\n              >\r\n                {lightropes.map((lightrope, index) => (\r\n                  <ul className={`lightrope ${lightrope}`}>\r\n                    {lights[index].map((light, i) => (\r\n                      <li\r\n                        className={light}\r\n                        style={\r\n                          !(context.gareland === \"rainbow\")\r\n                            ? { animationName: context.gareland }\r\n                            : { animationName: flashes[i] }\r\n                        }\r\n                      ></li>\r\n                    ))}\r\n                  </ul>\r\n                ))}\r\n              </div>\r\n            </map>\r\n          </div>\r\n        );\r\n      }}\r\n    </StoreContextConsumer>\r\n  );\r\n};\r\n\r\nexport default XmasTree;\r\n","import { useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { StoreContextConsumer } from \"../../../StoreContext\";\r\n\r\ninterface ToyInfo {\r\n  toy: {\r\n    num: string;\r\n    name: string;\r\n    count: string;\r\n    year: string;\r\n    shape: string;\r\n    color: string;\r\n    size: string;\r\n    favorite: boolean;\r\n  };\r\n  pos: { x: number; y: number };\r\n}\r\n\r\nconst Toy = (props: ToyInfo) => {\r\n  const [position, setPos] = useState(props.pos);\r\n  const [target, setTarget] = useState(\"toys\");\r\n  return (\r\n    <StoreContextConsumer>\r\n      {(context) => (\r\n        <Draggable\r\n          defaultPosition={position}\r\n          position={position}\r\n          onStart={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n          onDrag={(e, ui) => {\r\n            setPos({\r\n              x: position.x + ui.deltaX,\r\n              y: position.y + ui.deltaY,\r\n            });\r\n          }}\r\n          onStop={(e) => {\r\n            (e.target as HTMLElement).classList.add(\"hide\");\r\n            const elemClassName = document.elementFromPoint(\r\n              (e as MouseEvent).clientX,\r\n              (e as MouseEvent).clientY\r\n            )?.className;\r\n\r\n            if (elemClassName === \"tree-area\") {\r\n              if (target !== \"tree\") {\r\n                context.changeToysCount(+props.toy.num - 1, true);\r\n              }\r\n              setTarget(\"tree\");\r\n            } else {\r\n              setPos({ x: 0, y: 0 });\r\n              (e.target as HTMLElement).classList.remove(\"hide\");\r\n              (e.target as HTMLElement).classList.remove(\r\n                \"react-draggable-dragged\"\r\n              );\r\n              context.changeToysCount(+props.toy.num - 1, false);\r\n              setTarget(\"toys\");\r\n            }\r\n          }}\r\n        >\r\n          <div\r\n            className=\"toy-item\"\r\n            draggable=\"true\"\r\n            style={{ backgroundImage: `url(/toys/${props.toy.num}.png)` }}\r\n          ></div>\r\n        </Draggable>\r\n      )}\r\n    </StoreContextConsumer>\r\n  );\r\n};\r\n\r\nexport default Toy;\r\n","import data from \"../../../data\";\r\nimport { StoreContextConsumer } from \"../../../StoreContext\";\r\nimport \"./style.css\";\r\nimport Toy from \"./Toy\";\r\n\r\nconst TreeToys = () => {\r\n  return (\r\n    <StoreContextConsumer>\r\n      {(context) => (\r\n        <div className=\"tree-settings tree-toys-block\">\r\n          <div className=\"tree-settings-title\">Toys</div>\r\n          <div className=\"tree-toys-container\">\r\n            {context.savedToys.length === 0\r\n              ? data.slice(0, 20).map((value) => (\r\n                  <div className=\"tree-toy\">\r\n                    {Array.from({ length: +value.count }, (v, k) => k + 1).map(\r\n                      () => {\r\n                        return <Toy toy={value} pos={{ x: 0, y: 0 }} />;\r\n                      }\r\n                    )}\r\n\r\n                    <div className=\"toys-count\">\r\n                      {context.toysCount[+value.num - 1]}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              : data.map((toy) => {\r\n                  if (context.savedToys.includes(toy.num))\r\n                    return (\r\n                      <div className=\"tree-toy\">\r\n                        {Array.from(\r\n                          { length: +toy.count },\r\n                          (v, k) => k + 1\r\n                        ).map(() => {\r\n                          return <Toy toy={toy} pos={{ x: 0, y: 0 }} />;\r\n                        })}\r\n                        <div className=\"toys-count\">\r\n                          {context.toysCount[+toy.num - 1]}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </StoreContextConsumer>\r\n  );\r\n};\r\n\r\nexport default TreeToys;\r\n","import Footer from \"../Footer\";\r\nimport Header from \"../Header\";\r\nimport \"./style.css\";\r\nimport TreeSettings from \"./TreeSettings\";\r\nimport XmasTree from \"./TreeSettings/XmasTree/index\";\r\nimport TreeToys from \"./TreeToys/index\";\r\n\r\nconst Tree = () => (\r\n  <>\r\n    <Header route={\"tree\"} />\r\n    <div className=\"container tree-container\">\r\n      <TreeSettings />\r\n      <XmasTree />\r\n      <TreeToys />\r\n    </div>\r\n    <Footer />\r\n  </>\r\n);\r\n\r\nexport default Tree;\r\n","import \"./App.css\";\r\nimport Toys from \"./components/Toys/index\";\r\nimport Welcome from \"./components/Welcome/index\";\r\nimport { StoreContextConsumer } from \"./StoreContext\";\r\nimport { Route, Routes } from \"react-router\";\r\nimport Modal from \"./components/Modal\";\r\nimport Tree from \"./components/Tree\";\r\n\r\nconst App = () => (\r\n  <StoreContextConsumer>\r\n    {(context) => (\r\n      <div className=\"App\">\r\n        <Modal show={context.slotsModal} />\r\n        <Routes>\r\n          <Route path=\"/toys\" element={<Toys />}></Route>\r\n          <Route path=\"/\" element={<Welcome />}></Route>\r\n          <Route path=\"/tree\" element={<Tree />}></Route>\r\n        </Routes>\r\n      </div>\r\n    )}\r\n  </StoreContextConsumer>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { StoreContextProvider } from \"./StoreContext\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <StoreContextProvider>\r\n        <App />\r\n      </StoreContextProvider>\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}